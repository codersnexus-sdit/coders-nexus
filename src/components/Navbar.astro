---
import socialData from '../data/social.json';

const currentPath = Astro.url.pathname;

const navLinks = [
  { name: 'Home', href: '/' },
  { name: 'Events', href: '/events' },
  { name: 'Team', href: '/team' },
];

const isActive = (href: string) => {
  if (href === '/') return currentPath === '/';
  return currentPath.startsWith(href);
};
---

<nav class="fixed top-0 left-0 w-full z-50 backdrop-blur-sm transition-all duration-300 navbar-container">
  <div class="container mx-auto flex items-center justify-between px-6 md:px-12 py-4">
    <!-- Logo + Text -->
    <a href="/" class="flex items-center space-x-3 group">
      <img
        src="/images/logo.png"
        alt="Coders Nexus Logo"
        class="h-12 w-12 transition-transform group-hover:scale-110"
      />
      <div>
        <div class="text-xl font-bold text-gray-900 leading-tight">
          Coders Nexus
        </div>
        <div class="text-xs text-gray-600 font-medium">
          SDIT Open Source Community
        </div>
      </div>
    </a>

    <!-- Desktop Nav -->
    <div class="hidden md:flex items-center space-x-1">
      {navLinks.map((link) => (
        <a
          href={link.href}
          class={`px-4 py-2 rounded-xl text-sm font-medium transition-all duration-200
            ${
              isActive(link.href)
                ? 'text-primary-600 font-semibold underline underline-offset-4'
                : 'text-gray-700 hover:text-primary-600'
            }`}
        >
          {link.name}
        </a>
      ))}
    </div>

    <!-- Mobile Menu Button -->
    <button
      id="mobile-menu-button"
      class="md:hidden p-2 text-gray-700 hover:text-primary-600 transition-all duration-200"
      aria-label="Toggle menu"
      aria-expanded="false"
    >
      <svg
        id="menu-icon"
        class="w-6 h-6"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
        />
      </svg>
      <svg
        id="close-icon"
        class="w-6 h-6 hidden"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"
        />
      </svg>
    </button>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="hidden md:hidden px-6 pb-4 container mx-auto">
    <div class="flex flex-col space-y-2 items-center">
      {navLinks.map((link) => (
        <a
          href={link.href}
          class={`px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200
            ${
              isActive(link.href)
                ? 'text-primary-600 font-semibold underline underline-offset-4'
                : 'text-gray-700 hover:text-primary-600'
            }`}
        >
          {link.name}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  const navbar = document.querySelector('nav');

  // Handle mobile menu toggle
  if (menuButton && mobileMenu && menuIcon && closeIcon) {
    menuButton.addEventListener('click', () => {
      const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
      menuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu.classList.toggle('hidden');
      menuIcon.classList.toggle('hidden');
      closeIcon.classList.toggle('hidden');
    });
  }

  // Handle navbar background on scroll (without hiding)
  window.addEventListener('scroll', function() {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    
    if (navbar) {
      // Toggle transparent background based on scroll position
      if (scrollTop <= 50) {
        navbar.classList.add('navbar-transparent');
      } else {
        navbar.classList.remove('navbar-transparent');
      }
    }
  });
  
  // Set initial state on page load
  if (navbar) {
    const initialScroll = window.pageYOffset || document.documentElement.scrollTop;
    if (initialScroll <= 50) {
      navbar.classList.add('navbar-transparent');
    }
  }
</script>

<style>
  .navbar-container {
    background-color: rgba(255, 255, 255, 0.8);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, border-bottom 0.3s ease;
  }
  
  .navbar-transparent {
    background-color: transparent !important;
    border-bottom: 1px solid transparent !important;
  }
  
  .dark .navbar-container {
    background-color: rgba(17, 24, 39, 0.8);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  /* Removed navbar-hidden class to prevent auto-hiding */
</style>