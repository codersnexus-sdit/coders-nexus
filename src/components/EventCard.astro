---
// EventCard component for displaying event information
interface EventCardProps {
  title: string;
  description: string;
  date: Date;
  location: string;
  coverImage: string;
  slug: string;
  tags?: string[];
  featured?: boolean;
}

// Extract and type the props
const { 
  title, 
  description, 
  date, 
  location, 
  coverImage, 
  slug, 
  tags = [], 
  featured = false 
} = Astro.props as EventCardProps;

// Format the date for display
const formattedDate = date.toLocaleDateString('en-US', { 
  year: 'numeric', 
  month: 'short', 
  day: 'numeric' 
});
---

<!-- Event Card Link -->
<a href={`/events/${slug}`} class="group block bg-white dark:bg-gray-800 rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
  <!-- Event Image Container -->
  <div class="relative h-48 overflow-hidden">
    <img 
      src={coverImage} 
      alt={title}
      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      loading="lazy"
    />
    


  </div>
  
  <!-- Event Content -->
  <div class="p-6">
    <!-- Event Title -->
    <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 text-center group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
      {title}
    </h3>
    
    <!-- Event Date -->
    <div class="flex items-center justify-center text-sm text-gray-500 dark:text-gray-400">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
      </svg>
      <span>{formattedDate}</span>
    </div>
  </div>
</a>